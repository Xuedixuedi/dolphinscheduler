#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: k8s Test

on: 
  push:
    paths:
     - '.github/workflows/ci_k8s.yml'
     - 'dolphinscheduler/docker/kubernetes/**'
  pull_request:
    paths:
     - '.github/workflows/ci_k8s.yml'
     - 'dolphinscheduler/docker/kubernetes/**'

env:
  DOCKER_DIR: ./docker
  LOG_DIR: /tmp/dolphinscheduler

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest # runs-on 是必填字段
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check License Header
        uses: apache/skywalking-eyes@ec88b7d850018c8983f87729ea88549e100c5c82

      - name: Set up Helm
        uses: azure/setup-helm@v1

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.1.0

      # Lint

      - name: Run chart-testing (lint)
        run: ct lint

      - name: Set up maven
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven

      - name: build Image
        run: sh ./docker/build/hooks/build

      - name: Check Image
        run: docker images

      - name: Chart Version Replace 
        run: |
          export VERSION=$(cat $(pwd)/pom.xml | grep '<revision>' -m 1 | awk '{print $1}' | sed 's/<revision>//' | sed 's/<\/revision>//')
          sed -i "s/appVersion:latest/appVersion:${VERSION}/g" $(pwd)/docker/kubernetes/dolphinscheduler/Chart.yaml
          cat $(pwd)/docker/kubernetes/dolphinscheduler/Chart.yaml

      # Install

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.4.2
        with:
          minikube version: 'v1.16.0'
          kubernetes version: 'v1.19.2'
          github token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Check master status
        run: sh $(pwd)/docker/kubernetes/check-node.sh

      - name: Interact with the cluster
        run: kubectl get nodes
      
      - name: Helm Repo Add
        run: helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Dependency Update
        run: helm dependency update $(pwd)/docker/kubernetes/dolphinscheduler/.

      # Install Charts
      - name: Run chart-testing (install)
        run: helm install dolphinscheduler $(pwd)/docker/kubernetes/dolphinscheduler/. 

      # Check Server Status
      - name: Check Server Status
        run: sh $(pwd)/docker/kubernetes/check.sh

      - name: Interact with the cluster pods
        run: kubectl get pods 
<<<<<<< HEAD

      - name: kubectl get services
        run: kubectl get services

      - name: View the Deployment
        run: kubectl get deployments


=======
>>>>>>> dev

      - name: kubectl get services
        run: kubectl get services

      - name: View the Deployment
        run: kubectl get deployments
